<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>eu.rcauth.delegationserver</groupId>
    <artifactId>delegation-server</artifactId>
    <version>${revision}</version>
    <name>RCauth Delegation Server</name>
    <packaging>${packaging.type}</packaging>
    <description>RCauth Delegation Server</description>
    <url>https://github.com/rcauth-eu/aarc-delegation-server</url>

    <licenses>
        <license>
            <name>Apache license</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Tamas Balogh</name>
            <email>tamasb@nikhef.nl</email>
        </developer>
        <developer>
            <name>Mischa Sall√©</name>
            <email>msalle@nikhef.nl</email>
        </developer>
    </developers>

    <properties>
        <revision>0.2.2</revision>
        <oa4mpVersion>4.2-RCauth-1.2</oa4mpVersion>
        <seclibVersion>4.2-RCauth-1.2</seclibVersion>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>

        <dependency>
            <groupId>edu.uiuc.ncsa.myproxy</groupId>
            <artifactId>oa4mp-server-oauth2</artifactId>
            <version>${oa4mpVersion}</version>
            <type>war</type>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>edu.uiuc.ncsa.myproxy</groupId>
            <artifactId>oa4mp-server-loader-oauth2</artifactId>
            <version>${oa4mpVersion}</version>
        </dependency>

        <!-- Note: pulled in by oa4mp-server-admin-oauth2 but that's only there
             at run-time for the cli, not the war. Saver to specify it since
             it's a dependency in any case -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.16</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.ibm.icu/icu4j -->
        <dependency>
            <groupId>com.ibm.icu</groupId>
            <artifactId>icu4j</artifactId>
            <version>64.2</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>

        <plugins>
            <!-- make sure jar file's MANIFEST.MF will contain the version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <!--compilerArgument>-Xlint:deprecation,unchecked</compilerArgument-->
                    <compilerArgument>-Xlint:all</compilerArgument>
                </configuration>
                <version>3.8.1</version>
            </plugin>

            <!-- update revision properties -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.1.0</version>
                <configuration>
                    <!-- also keep name -->
                    <pomElements><name/></pomElements>
                    <updatePomFile>true</updatePomFile>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <use>false</use>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <!-- Note: for Java before 10 comment out next one -->
                            <!--<additionalOptions>-html5</additionalOptions>-->
                            <!-- next flag is useful if there are issues with the
                                 javadoc such as empty javadoc tags -->
                            <!--doclint>none</doclint-->
                            <!-- enable links to Java's own javadoc -->
                            <detectJavaApiLink>true</detectJavaApiLink>
                            <!-- for JDK >=10 must source equal to compile source
                                 see https://bugs.openjdk.java.net/browse/JDK-8212233 -->
                            <source>1.8</source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.6</version>
                <configuration>
                    <skip>false</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>

        <finalName>oauth2</finalName>
    </build>

    <profiles>

        <!-- default profile (it builds a war file) -->
        <profile>
            <id>webapp</id>

            <!-- Note: only needed for sources in cli profile, but we always
                 compile all, hence use provided. Note that this would also pull
                 in the necessary mysql-connector-java, so add that manually.
                 We must not always include it, since it would pull in
                 javax.mail which should be provided by the system, see note in
                 security-lib's ServletMailUtil about cannot cast ... -->
            <dependencies>
                <dependency>
                    <groupId>edu.uiuc.ncsa.myproxy</groupId>
                    <artifactId>oa4mp-server-admin-oauth2</artifactId>
                    <version>${oa4mpVersion}</version>
                    <scope>provided</scope>
                </dependency>
            </dependencies>

            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <packaging.type>war</packaging.type>
            </properties>
        </profile>

        <!-- cli profile (it builds a jar files) -->
        <profile>
            <!--
                Using the 'cli' profile you can build the oa2-cli.jar tool, that
                can be used for client approvals. You need to build this tool
                here if you're planning to use it with the Delegation Server!
                To build the cli execute: mvn clean package -P cli
            -->
            <id>cli</id>

            <dependencies>
                <dependency>
                    <groupId>edu.uiuc.ncsa.myproxy</groupId>
                    <artifactId>oa4mp-server-admin-oauth2</artifactId>
                    <version>${oa4mpVersion}</version>
                    <scope>compile</scope>
                </dependency>
            </dependencies>

            <properties>
                <packaging.type>jar</packaging.type>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <archive>
                                <manifest>
                                    <addClasspath>true</addClasspath>
                                    <mainClass>eu.rcauth.delegserver.oauth2.cli.DSOA2Commands</mainClass>
                                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                </manifest>
                            </archive>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <appendAssemblyId>false</appendAssemblyId>
                            <attach>false</attach>
                            <finalName>oa2-cli</finalName>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-my-jar-with-dependencies</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

</project>
